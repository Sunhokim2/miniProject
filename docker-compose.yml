services:
  frontend:
    build:
      context: ./frontProject
      dockerfile: Dockerfile.dev
      args:
        - VITE_NAVER_CLIENT_ID=${VITE_NAVER_CLIENT_ID}
    ports:
      - "5173:5173"
    volumes:
      - ./frontProject:/app
      - /app/node_modules
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=5173
      - VITE_NAVER_CLIENT_ID=${VITE_NAVER_CLIENT_ID}
    command: npm run dev -- --host 0.0.0.0
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    build:
      context: ./backProject
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-local:5432/${DB_NAME_LOCAL}
      - SPRING_DATASOURCE_USERNAME=${DB_USER_LOCAL}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD_LOCAL}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
      - NAVER_MAP_ID=${NAVER_MAP_ID}
      - NAVER_MAP_SECRET=${NAVER_MAP_SECRET}
      - OPEN_API_URL=${OPEN_API_URL}
      - OPEN_API_KEY=${OPEN_API_KEY}
    depends_on:
      - postgres-local
    networks:
      - app-network
    restart: unless-stopped

  postgres-local:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres-local
    image: postgres:17.4-alpine
    ports:
      - "${DB_PORT_LOCAL_HOST}:5432"
    environment:
      POSTGRES_USER: ${DB_USER_LOCAL}
      POSTGRES_PASSWORD: ${DB_PASSWORD_LOCAL}
      POSTGRES_DB: ${DB_NAME_LOCAL}
      TZ: Asia/Seoul
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_local: