spring.application.name=backProject

# DataSource Configuration
spring.datasource.url=jdbc:postgresql://postgres-local:5432/${DB_NAME_LOCAL}
spring.datasource.username=${DB_USER_LOCAL}
spring.datasource.password=${DB_PASSWORD_LOCAL}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Naver API Credentials SEARCH
naver.client.id=${NAVER_CLIENT_ID}
naver.client.secret=${NAVER_CLIENT_SECRET}

# Naver Maps
naver.map.client-id=${NAVER_MAP_ID}
naver.map.client-secret=${NAVER_MAP_SECRET}

# GPT API
openai.api.url=${OPEN_API_URL}
openai.api.key=${OPEN_API_KEY}

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG

#소셜로그인
# 구글 소셜로그인 정보 (환경변수로 값 치환)
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.google.scope=profile,email

