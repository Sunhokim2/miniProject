spring.application.name=backProject

# DataSource ??
spring.datasource.url=jdbc:postgresql://localhost:5433/localDB
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate ??
# ??? ??? Entity? ???? ?? Table DROP & CREATE
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true



# Naver API Credentials SEARCH
naver.client.id=${NAVER_CLIENT_ID}
naver.client.secret=${NAVER_CLIENT_SECRET}

# Naver Maps
naver.map.client-id=${NAVER_MAP_ID}
naver.map.client-secret=${NAVER_MAP_SECRET}


# gpt api
openai.api.url=${OPEN_API_URL}
openai.api.key=${OPEN_API_KEY}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


#소셜로그인
# 구글 소셜로그인 정보 (환경변수로 값 치환)
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.google.scope=profile,email


